bloquer touche lettre


Waiting for postgres...
PostgreSQL started


Enter PEM pass phrase:
Error writing key
40271DBEA47F0000:error:1400006B:UI routines:UI_process:processing error:../crypto/ui/ui_lib.c:548:while reading strings
40271DBEA47F0000:error:0480006D:PEM routines:PEM_def_callback:problems getting password:../crypto/pem/pem_lib.c:62:
40271DBEA47F0000:error:07880109:common libcrypto routines:do_ui_passphrase:interrupted or cancelled:../crypto/passphrase.c:184:
40271DBEA47F0000:error:1C80009F:Provider routines:p8info_to_encp8:unable to get passphrase:../providers/implementations/encode_decode/encode_key2any.c:116:
Could not read private key from privkey.pem
Could not read private key from privkey.pem
No changes detected
No changes detected in app 'authentication'
Operations to perform:
  Apply all migrations: admin, auth, authentication, authtoken, contenttypes, sessions
Running migrations:
  No migrations to apply.

160 static files copied to '/backend/productionfiles', 178 unmodified.
Watching for file changes with StatReloader
Performing system checks...

System check identified no issues (0 silenced).
June 14, 2024 - 14:53:51
Django version 4.2.11, using settings 'backend.settings'
Starting development server at http://0.0.0.0:8000/
Quit the server with CONTROL-C.

[14/Jun/2024 14:53:52] "GET /return_friends_list/ HTTP/1.1" 200 267
[14/Jun/2024 14:53:57] "GET /return_friends_list/ HTTP/1.1" 200 267
[14/Jun/2024 14:54:02] "GET /return_friends_list/ HTTP/1.1" 200 267



@api_view(['POST'])
@authentication_classes([TokenAuthentication])
@permission_classes([IsAuthenticated])
def change_profile_info(request):
    if request.method == 'POST':
        data = request.data.copy()
        anonymousStatus = request.data.get('anonymousStatus') == 'true'
        if anonymousStatus:
          random_color = random.choice(colors)
          randon_items = random.choice(items)
          res = random_color + randon_items
          user_tmp = data.get('username')
          nbrUser = User.objects.all().count()
          print(nbrUser)
          for i in range(nbrUser + 1):
            if not User.objects.filter(username=res).exists():
              data['username'] = res
              break
            else:
              res = random.choice(colors) + random.choice(items)
        data.pop('anonymousStatus')
        serializer = UpdateInfoSerializer(instance=request.user, data=data)
        if 'profile-pic' in request.FILES:
            uploaded_file = request.FILES['profile-pic']
            request.user.profile_picture = uploaded_file
            request.user.save()
            print("picture changed") 
        if serializer.is_valid():
            serializer.save()
            return Response({'status': "succes", 'id': request.user.id, 'serializer': serializer.data, 'message': "info changed"}, status=200)
        first_error = next(iter(serializer.errors.values()))[0]
        print(first_error)
        return Response({'status': "failure", "message": first_error}, status=400)

