services:
  database:
    container_name: postgres
    networks:
      - ft_transcendence
    build:
      context: ./database
      dockerfile: Dockerfile
    env_file: .env
    restart: always
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB} -h localhost"]
      interval: 10s
      timeout: 10s
      retries: 3
    volumes:
      - database_volume:/var/lib/postgresql/data

  server:
    container_name: server
    networks:
      - ft_transcendence
    build:
      context: ./server
      dockerfile: Dockerfile
    env_file: .env
    restart: on-failure
    ports:
      - "8000:8000"
    depends_on:
      - database
    volumes:
      - ./backend:/backend

  cron:
    container_name: cron
    networks:
      - ft_transcendence
    build:
      context: ./cron
      dockerfile: Dockerfile
    env_file: .env
    restart: on-failure
    depends_on:
      - database
      - server
    volumes:
      - ./backend:/backend

  nginx:
    container_name: nginx
    networks:
      - ft_transcendence
    build:
      context: ./nginx
      dockerfile: Dockerfile
    ports:
      - "4443:443"
    volumes:
      - ./backend:/backend
    depends_on:
      - server

volumes:
  server_volume:
    name: server_volume
    driver: local
    driver_opts:
      type: 'none'
      o: 'bind'
      device: $PWD/backend
  database_volume:
    name: database_volume

networks:
  ft_transcendence: